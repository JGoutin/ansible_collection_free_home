---

- name: Ensure SSH public key is authorized
  authorized_key:
    user: "{{ ansible_user }}"
    key: "{{ common_ssh_authorized_keys }}"
    state: present
  when: common_ssh_authorized_keys is defined

- name: Ensure current user password is set
  user:
    name: "{{ ansible_user }}"
    password: "{{ common_admin_password }}"
  when: common_admin_password is defined

- name: Ensure Chrony is configured to use specified NTP server
  lineinfile:
    path: /etc/chrony.conf
    regexp: "^pool "
    line: "pool {{ common_ntp_server }} iburst"
  when: common_ntp_server is defined

- name: Ensure Chrony is restarted
  systemd:
    name: chronyd
    state: restarted
  when: common_ntp_server is defined
  changed_when: false

- name: Ensure Grub timeout is set to specified value
  lineinfile:
    path: /etc/sysconfig/grub
    line: "GRUB_TIMEOUT={{ common_grub_timeout }}"
    regexp: "^GRUB_TIMEOUT="

- name: Ensure Grub configuration is applied
  command: grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg
  changed_when: false

- name: Ensure DNF download performance is optimal
  ini_file:
    path: /etc/dnf/dnf.conf
    section: main
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - option: max_parallel_downloads
      value: 10
    - option: fastestmirror
      value: "true"
    - option: keepcache
      value: "{{ common_dnf_keepcache }}"
    - option: install_weak_deps
      value: "{{ common_dnf_install_weak_deps }}"

- name: Ensure DNF automatic and Fail2Ban are installed
  dnf:
    state: present
    name:
      - dnf-automatic
      - dnf-plugins-extras-tracer
      - fail2ban-firewalld
    install_weak_deps: false
  retries: 10
  delay: 1

- name: Ensure NFS client requirements are installed
  dnf:
    state: present
    name: nfs-utils
    install_weak_deps: false
  retries: 10
  delay: 1
  when: common_nfs_mount

- name: Ensure NFS target mount directories are present
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
  with_items: "{{ common_nfs_mount }}"
  when: common_nfs_mount

- name: Mount NFS shares
  mount:
    path: "{{ item.path }}"
    src: "{{ item.src }}"
    opts: "{{ item.opts | default(omit) }}"
    fstype: nfs
    state: "{{ item.state | default('mounted') }}"
  with_items: "{{ common_nfs_mount }}"
  when: common_nfs_mount

- name: Ensure SMB client requirements are installed
  dnf:
    state: present
    name: cifs-utils
    install_weak_deps: false
  retries: 10
  delay: 1
  when: common_smb_mount

- name: Ensure SMB target mount directories are present
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
  with_items: "{{ common_smb_mount }}"
  when: common_smb_mount

- name: Mount SMB shares
  mount:
    path: "{{ item.path }}"
    src: "{{ item.src }}"
    opts: "{{ item.opts | default(omit) }}"
    fstype: cifs
    state: "{{ item.state | default('mounted') }}"
  with_items: "{{ common_smb_mount }}"
  when: common_smb_mount

- name: Ensure postfix is installed
  dnf:
    state: present
    name: postfix
    install_weak_deps: false
  retries: 10
  delay: 1
  when: common_root_mail is defined

- name: Ensure Postfix is configured with supported network protocol
  lineinfile:
    path: /etc/postfix/main.cf
    regexp: "^inet_protocols ="
    line: "inet_protocols = {{ common_postfix_inet_protocols }}"
  when: common_root_mail is defined

- name: Ensure postfix service is started and enabled at boot
  systemd:
    name: postfix
    state: started
    enabled: true
  when: common_root_mail is defined

- name: Ensure root mails redirection is configured
  lineinfile:
    path: /etc/aliases
    regexp: "^#?root:"
    line: "root:           {{ common_root_mail }}"
  when: common_root_mail is defined

- name: Ensure mail aliases are reloaded
  command: newaliases
  changed_when: false
  when: common_root_mail is defined

- name: Ensure dnf-automatic-restart is installed
  get_url:
    url: "https://raw.githubusercontent.com/agross/dnf-automatic-restart/master\
          /dnf-automatic-restart"
    dest: /usr/local/sbin/dnf-automatic-restart
  retries: 10
  delay: 1

- name: Ensure dnf-automatic-install service directory is present
  file:
    path: /etc/systemd/system/dnf-automatic-install.service.d/
    state: directory

- name: Ensure dnf-automatic-restart is enabled in dnf-automatic-install
  copy:
    src: dnf-automatic-restart.conf
    dest: "/etc/systemd/system/dnf-automatic-install.service.d/\
           dnf-automatic-restart.conf"

- name: Ensure DNF automatic update service is started and enabled at boot
  systemd:
    name: dnf-automatic-install.timer
    state: started
    enabled: true

- name: Ensure Firewalld service is started and enabled at boot
  systemd:
    name: firewalld
    state: started
    enabled: true
  tags:
    - molecule-idempotence-notest

- name: Ensure Fail2ban service is started and enabled at boot
  systemd:
    name: fail2ban
    state: started
    enabled: true

- name: Ensure admin firewalld zone is present
  firewalld:
    zone: admin
    state: present
    permanent: true
  when: firewalld_admin_source is defined

- name: Ensure firewalld is reloaded
  command: firewall-cmd --reload
  changed_when: false
  when: common_admin_firewalld_source is defined

- name: Ensure admin firewalld zone is present
  firewalld:
    zone: admin
    source: "{{ common_admin_firewalld_source }}"
    state: enabled
    permanent: true
    immediate: true
  when: common_admin_firewalld_source is defined

- name: Ensure admin firewalld zone allow SSH
  firewalld:
    zone: admin
    service: ssh
    state: enabled
    permanent: true
    immediate: true
  when: common_admin_firewalld_source is defined

- name: Ensure public firewalld zone default services are dropped
  firewalld:
    zone: public
    service: "{{ item }}"
    state: disabled
    permanent: true
    immediate: true
  with_items:
    - ssh
    - dhcpv6-client
    - mdns
  when: common_admin_firewalld_source is defined
